filter {
	ruby {
		code => "event.set('[event][received_at]', Time.now());"
	}
	
	mutate {
		convert => { "[event][received_at]" => "string" }
    }
		
	date {
           match => [ "[event][received_at]", "yyyy-MM-dd HH:mm:ss" ,"UNIX", "ISO8601" ,"yyyy-MM-dd'T'HH:mm:ss","MMM dd yyyy HH:mm:ss","MMM dd HH:mm:ss","MMM  dd HH:mm:ss"]
           timezone => "UTC"
           target => "@timestamp"
    }
	
	ruby {
		id => "add_received_time"
		code => '
		event.set("[event][received_time]", (event.get("@timestamp") + 0).strftime( "%H:%M:%S"))'
	}
	
}
